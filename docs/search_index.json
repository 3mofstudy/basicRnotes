[["初級r--流程控制.html", "Chapter 5 初級R- 流程控制 5.1 if -else 邏輯判斷 5.2 for 迴圈", " Chapter 5 初級R- 流程控制 5.1 if -else 邏輯判斷 ifelse() ifelse是最簡單的邏輯判斷，寫法類似excel函數if函數，第一參數放判斷句，第二參數放判斷為真(TRUE)，會執行的程式碼，第三參數放判斷為假(FALSE)，會執行的程式碼 num &lt;- c(7,8,10,65,6,8,35,15,25,9,22) ifelse(num&gt;=10,&quot;&gt;=10&quot;,&quot;&lt;10&quot;) ## [1] &quot;&lt;10&quot; &quot;&lt;10&quot; &quot;&gt;=10&quot; &quot;&gt;=10&quot; &quot;&lt;10&quot; &quot;&lt;10&quot; &quot;&gt;=10&quot; &quot;&gt;=10&quot; &quot;&gt;=10&quot; &quot;&lt;10&quot; ## [11] &quot;&gt;=10&quot; if() 或 if()-else() 雖然ifelse很好用，但僅適用於單行邏輯判斷或執行，當預計執行程式碼較為複雜，無法用一行程式碼來執行，就必須考慮 使用if if-else敘述使用在邏輯判斷，若需要依條件改變需要執行的程式碼，就會使用if-else，若if後所接邏輯判斷為真(TRUE)，就會執行if下方之程式碼，若為偽(FALSE)，則執行else下方之程式碼，若程式中沒有else片段，則不執行任何程式碼。 5.2 for 迴圈 for(i in c(&quot;蘋果&quot;,&quot;香蕉&quot;,&quot;西瓜&quot;)){ text &lt;- paste(&quot;這是&quot;,i ) print (text) } ## [1] &quot;這是 蘋果&quot; ## [1] &quot;這是 香蕉&quot; ## [1] &quot;這是 西瓜&quot; "]]
