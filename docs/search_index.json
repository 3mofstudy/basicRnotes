[["初級r--元素介紹.html", "Chapter 3 初級R- 元素介紹 3.1 資料賦值 3.2 資料型態 3.3 屬性查詢與轉換 3.4 運算子", " Chapter 3 初級R- 元素介紹 3.1 資料賦值 資料的賦值，又稱為變數的設定。在進入R領域前，需要理解何謂是變數，變數就是可變動的數值，設定方式為變數名稱。在R中&lt;- 及=符號皆可被用來賦予變數，但R科學家更常使用&lt;-，在RStudio中，可用快速鍵Alt+- 快速形成 a &lt;- 10 b = 15 a+b ## [1] 25 3.2 資料型態 資料型態可分成一般性資料型態，和特殊性資料型態，初學者基本上學會一般性資料型態就已足夠，而特殊性資料型態通常應用在特殊環境，例如factor是R程式特殊專有資料型態，常運用統計學上類別變量相關分析，ts常用於與時間序列有關的統計。本章節會介紹一般性常見的資料型態，特殊性資料型態會在之後章節(中級篇或高級篇)，進一步介紹。 一般性(常見性) 特殊性 字串(character) 因素(factor) 數值(numeric) 時間序列(ts) 布林值(logic) 地圖格式(sp, sf) 日期/時間 (Date/ POSIXct POSIXt) 其他( eg..) 3.2.1 字串 字串可用單引號或雙引號包起來代表，何時使用單引號或雙引號其實是隨意，只是需要注意一點，當單引號亦視為字串中內容時，外圍則須用雙引號包起來，反之亦然 name &lt;- &quot;Mary Wang&quot; print(name) ## [1] &quot;Mary Wang&quot; citizenship &lt;- &#39;Japan&#39; print(citizenship) ## [1] &quot;Japan&quot; sentences &lt;- &quot;I&#39;m an adult&quot; #單引號需包在雙引號內 print(sentences) ## [1] &quot;I&#39;m an adult&quot; 3.2.2 數值 數學的數包含實數(numeric)和複數(complex)，R是專為計算數學相關領域而發展的程式語言，數的型態多於其他程式語言，R能處理實數(numeric)與複數(complex)， 實數又包括整數（沒有小數點）與浮點數（有小數點）的數值，所以在R的數值中，通常分成三種，分別為: numeric: 浮點數 integer: 整數 complex: 複數 一般可以用class來檢查變數類型，正常來說，數字都是預設為浮點數 class(5) ## [1] &quot;numeric&quot; 若要指定整數，可以在數字後面加上L class(5L) ## [1] &quot;integer&quot; 若要新增一個複數也很簡單，在數字後面加上i就行了 class(3i) ## [1] &quot;complex&quot; 3.2.3 布林值 布林值又稱為邏輯值((logic)，用於邏輯判斷，可使用大寫TRUE或T代表真，大寫FALSE或F代表假，此外布林值可以進行加減運算， TRUE =1 ，FALSE =0 A &lt;- TRUE class(A) ## [1] &quot;logical&quot; B &lt;- FALSE class(B) ## [1] &quot;logical&quot; C &lt;-T class(B) ## [1] &quot;logical&quot; print(A+B+C) ## [1] 2 3.2.4 日期/時間 (1) 取得當下時間資訊 R內建有幾個函數，可以查詢當下系統的日期、時間及時區資訊 Sys.Date() #當前日期 類似lubridate::today() ## [1] &quot;2024-04-09&quot; date() #當前系統日期和時間 ## [1] &quot;Tue Apr 9 11:17:56 2024&quot; Sys.time() #當前系統日期和時間 lubridate::now() ## [1] &quot;2024-04-09 11:17:56 CST&quot; Sys.timezone() #有關時區的信息將返回當前時區的名稱 ## [1] &quot;Asia/Taipei&quot; (2) as.Date 函數(文字轉日期) as.Date 可以將文字或數字格式轉換成日期格式，使用時，第一個參數若放文字格式，後面,tryFormats參數輸入相對應的原文字格式 as.Date(&quot;2024-01-05&quot;,tryFormats=&quot;%Y-%m-%d&quot;) ## [1] &quot;2024-01-05&quot; as.Date(&quot;2024/01/06&quot;,tryFormats=&quot;%Y/%m/%d&quot;) ## [1] &quot;2024-01-06&quot; as.Date(&quot;20240107&quot;,tryFormats=&quot;%Y%m%d&quot;) ## [1] &quot;2024-01-07&quot; (3) as.Date 函數(數字轉日期) #as.Date(31) as.Date(31,origin=&quot;2024-01-01&quot;) ## [1] &quot;2024-02-01&quot; (4) 擷取特定日期格式 #輸出年份： format(Sys.Date(),format=&quot;%Y&quot;) ## [1] &quot;2024&quot; format(Sys.Date(),format=&quot;%y&quot;) ## [1] &quot;24&quot; #輸出月份： format(Sys.Date(),format=&quot;%m&quot;) ## [1] &quot;04&quot; format(Sys.Date(),format=&quot;%b&quot;) ## [1] &quot;四月&quot; format(Sys.Date(),format=&quot;%B&quot;) ## [1] &quot;四月&quot; #輸出日期： format(Sys.Date(),format=&quot;%d&quot;) ## [1] &quot;09&quot; #輸出星期： format(Sys.Date(),format=&quot;%A&quot;) ## [1] &quot;星期二&quot; format(Sys.Date(),format=&quot;%a&quot;) ## [1] &quot;週二&quot; format(Sys.Date(),format=&quot;%u&quot;) ## [1] &quot;2&quot; #輸出週數： format(as.Date(&quot;2024-02-01&quot;),format=&quot;%w&quot;) ## [1] &quot;4&quot; format(as.Date(&quot;2024-02-01&quot;),format=&quot;%W&quot;) ## [1] &quot;05&quot; (5) 時間處理 #as.POSIXlt() # 如果只有年月日的計算就是上面那種as.DATE格式 可是如果包含到時分秒 就要用到下列轉換 #as.POSIXct() #從1970年1月1日以後開始計算秒數 D1 &lt;- as.POSIXlt(&quot;2023-08-01 03:00:00&quot; ,tryFormats = c(&quot;%Y-%m-%d %H:%M:%S&quot;)) D2 &lt;- as.POSIXlt(&quot;2023-08-02 08:00:00&quot; ,tryFormats = c(&quot;%Y-%m-%d %H:%M:%S&quot;)) (6) 擷取特定時間格式 format(Sys.time(),format=&quot;%H&quot;) #輸出小時 ## [1] &quot;11&quot; format(Sys.time(),format=&quot;%M&quot;) #輸出分鐘 ## [1] &quot;17&quot; format(Sys.time(),format=&quot;%S&quot;) #輸出秒數 ## [1] &quot;57&quot; format(Sys.Date(),format=&quot;%Y年%m月%d日&quot;) ## [1] &quot;2024年04月09日&quot; format(Sys.Date(),format=&quot;西元%Y年%m月%d日&quot;) ## [1] &quot;西元2024年04月09日&quot; (7) 日期時間的加減 #單純加秒數 D1+1 ## [1] &quot;2023-08-01 03:00:01 CST&quot; #兩個日期時間相加減 D2-D1 # Time difference of 1.208333 days ## Time difference of 1.208333 days difftime(D2,D1, units = &quot;mins&quot;) #Time difference of 1740 mins ## Time difference of 1740 mins 3.3 屬性查詢與轉換 資料查詢可根據資料類型來分類 class可以查詢某物件的屬性，如下圖所示 a &lt;- &quot;dog&quot; class(a) ##屬性 純文字 (character) ## [1] &quot;character&quot; b &lt;- 380 class(b) ##屬性 數字 (numeric) ## [1] &quot;numeric&quot; c &lt;- TRUE class(c) ##屬性 邏輯值 (logical) ## [1] &quot;logical&quot; d &lt;- Sys.time() class(d) ##屬性 日期時間 (&quot;POSIXct&quot; &quot;POSIXt&quot;) ## [1] &quot;POSIXct&quot; &quot;POSIXt&quot; 3.4 運算子 運算子一般分成二類，第一類為常見用於加減乘除的算術運算子，第二類為邏輯運算子，通常根據所判斷的規則，輸出結果為TRUE 或FALSE，常與條件控制(if-else)搭配使用。 3.4.1 算術運算子 1.一般算術運算子 符號 意義 範例指令 範例結果 + 加 3+4 7 - 減 10-8 2 * 乘 5*6 30 / 除 130/5 26 ^ 指數乘冪 2^4 16 %% 餘數 78%%10 8 %/% 商數 78%/%10 7 2.特殊算術運算子 有些算術運算子，適用於矩陣的計算 符號 意義 %*% 矩陣內積乘法 %o% 矩陣外積乘法 %x% 矩陣Kronecker乘法 A = matrix(rep(c(1,2,3),2),nrow = 2,byrow=F) print (A) ## [,1] [,2] [,3] ## [1,] 1 3 2 ## [2,] 2 1 3 B = matrix(rep(c(1,2,3),2),nrow = 3,byrow=T) print (B) ## [,1] [,2] ## [1,] 1 2 ## [2,] 3 1 ## [3,] 2 3 #矩陣內積乘法 A %*% B ## [,1] [,2] ## [1,] 14 11 ## [2,] 11 14 #矩陣外積乘法 A %o% B ## , , 1, 1 ## ## [,1] [,2] [,3] ## [1,] 1 3 2 ## [2,] 2 1 3 ## ## , , 2, 1 ## ## [,1] [,2] [,3] ## [1,] 3 9 6 ## [2,] 6 3 9 ## ## , , 3, 1 ## ## [,1] [,2] [,3] ## [1,] 2 6 4 ## [2,] 4 2 6 ## ## , , 1, 2 ## ## [,1] [,2] [,3] ## [1,] 2 6 4 ## [2,] 4 2 6 ## ## , , 2, 2 ## ## [,1] [,2] [,3] ## [1,] 1 3 2 ## [2,] 2 1 3 ## ## , , 3, 2 ## ## [,1] [,2] [,3] ## [1,] 3 9 6 ## [2,] 6 3 9 #矩陣 Kronecker 乘法 A %x% B ## [,1] [,2] [,3] [,4] [,5] [,6] ## [1,] 1 2 3 6 2 4 ## [2,] 3 1 9 3 6 2 ## [3,] 2 3 6 9 4 6 ## [4,] 2 4 1 2 3 6 ## [5,] 6 2 3 1 9 3 ## [6,] 4 6 2 3 6 9 3.4.2 邏輯運算子 1.一般邏輯運算子 符號 意義 範例指令 範例結果 &lt; 小於 3&lt;4 TRUE &gt; 大於 10&gt;8 TRUE == 等於 5==6 FALSE != 不等於 5!=6 TRUE &gt;= 大於等於 10&gt;=8 TRUE &lt; = 小於等於 10&lt;=8 FALSE ! 邏輯反轉 !5==4 TRUE 2.特殊邏輯運算子 "]]
